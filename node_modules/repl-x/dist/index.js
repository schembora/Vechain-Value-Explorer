#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const REPL = require("repl");
function start(options, ctxObj) {
    const repl = REPL.start(options);
    // promisfied question
    repl.q = (query) => {
        return new Promise(resolve => {
            repl.question(query, answer => {
                resolve(answer);
            });
        });
    };
    const originCompleter = repl.completer;
    function init() {
        const obj = ctxObj();
        // override completer
        const propNames = Object.getOwnPropertyNames(obj);
        const skipSuffixes = Object.getOwnPropertyNames(Object.prototype).map(n => '.' + n);
        propNames.forEach(n => {
            const desc = Object.assign({}, Object.getOwnPropertyDescriptor(obj, n));
            delete desc.writable;
            Object.defineProperty(repl.context, n, desc);
        });
        function shouldSkipAutoCompletion(s) {
            if (s.indexOf('.') < 0) {
                return propNames.indexOf(s) < 0;
            }
            return skipSuffixes.some(n => s.endsWith(n));
        }
        repl.completer = (line, callback) => {
            originCompleter.call(repl, line, (err, out) => {
                if (err)
                    return callback(err);
                callback(null, [out[0].filter(i => !shouldSkipAutoCompletion(i)), out[1]]);
            });
        };
    }
    process.nextTick(init);
    repl.on('reset', init);
    //override eval to support Promise    
    const originEval = repl.eval;
    repl.eval = (cmd, ctx, filename, callback) => {
        function finish(err, result) {
            return __awaiter(this, arguments, void 0, function* () {
                const listeners = repl.listeners('line');
                listeners.forEach(l => repl.removeListener('line', l));
                try {
                    if (err)
                        return callback(err);
                    if (result) {
                        let resolvedResult;
                        try {
                            resolvedResult = yield result;
                        }
                        catch (e) {
                            return callback(e);
                        }
                        if (resolvedResult === exports.VOID)
                            return callback(null);
                        callback(null, resolvedResult);
                    }
                    else {
                        if (arguments.length > 1)
                            callback(err, result);
                        else
                            callback(err);
                    }
                }
                finally {
                    listeners.forEach(l => repl.addListener('line', l));
                }
            });
        }
        originEval.call(repl, cmd, ctx, filename, finish);
    };
    return repl;
}
exports.start = start;
exports.VOID = {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFQSw2QkFBNkI7QUFZN0IsZUFBc0IsT0FBeUIsRUFBRSxNQUFvQjtJQUNqRSxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBRWhDLHNCQUFzQjtJQUN0QixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSztRQUNYLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBUyxPQUFPO1lBQzlCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLE1BQU07Z0JBQ3ZCLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUNuQixDQUFDLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFBO0lBQ0QsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN2QztRQUVJLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBRSxDQUFBO1FBRXBCLHFCQUFxQjtRQUNyQixNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDakQsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQTtRQUVuRixTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDZixNQUFNLElBQUkscUJBQVEsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBRSxDQUFBO1lBQzNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQTtZQUNwQixNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO1FBQ2hELENB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