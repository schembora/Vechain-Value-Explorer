'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.relativeWipeCheck = undefined;

var _common = require('./_common');

var _common2 = _interopRequireDefault(_common);

var _module = require('../module');

var _common3 = require('../_common');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const trimKey = key => key[0] == '.' ? trimKey(key.substr(1)) : key;

const relativeWipeCheck = exports.relativeWipeCheck = (stubs, moduleName) => {
  if (Object.keys(stubs).find(key => _common3.extensions.find(ext => moduleName.endsWith(trimKey(key + ext))))) {
    return _common.YES;
  }
};

const fileNameTransformer = (fileName /*, module*/) => fileName;
//const wipeCheck = (stubs, moduleName) => relativeWipeCheck(stubs, moduleName);

const shouldMock = (mock, request, parent, topModule) => {
  return (0, _module.inParents)(parent, topModule) ? _common.PASS : _common.NO;
};

const plugin = (0, _common2.default)({
  fileNameTransformer,
  //wipeCheck,
  shouldMock,

  name: 'relative'
});

exports.default = plugin;