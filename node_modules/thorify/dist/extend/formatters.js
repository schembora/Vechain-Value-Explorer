"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const debug = require("debug")("thor:injector");
const web3Utils = require("web3-utils");
/* tslint:disable:max-line-length */
const extendFormatters = function (web3) {
    const outputTransactionFormatter = web3.extend.formatters.outputTransactionFormatter;
    web3.extend.formatters.outputTransactionFormatter = function (tx) {
        if (tx && tx.isThorified) {
            debug("outputTransactionFormatter");
            tx.gas = web3Utils.hexToNumber(tx.gas);
            tx.chainTag = web3Utils.numberToHex(tx.chainTag);
            if (tx.origin) {
                tx.origin = web3Utils.toChecksumAddress(tx.origin);
            }
            if (tx.clauses) {
                for (const clause of tx.clauses) {
                    clause.value = web3.extend.formatters.outputBigNumberFormatter(clause.value);
                    if (clause.to && web3Utils.isAddress(clause.to)) { // tx.to could be `0x0` or `null` while contract creation
                        clause.to = web3Utils.toChecksumAddress(clause.to);
                    }
                    else {
                        clause.to = null; // set to `null` if invalid address
                    }
                }
            }
            return tx;
        }
        else {
            return outputTransactionFormatter(tx);
        }
    };
    const outputTransactionReceiptFormatter = web3.extend.formatters.outputTransactionReceiptFormatter;
    web3.extend.formatters.outputTransactionReceiptFormatter = function (receipt) {
        if (receipt && receipt.isThorified) {
            debug("outputTransactionReceiptFormatter");
            if (receipt.hasOwnProperty("transactionIndex")) {
                delete receipt.transactionIndex;
            }
            if (receipt.hasOwnProperty("cumulativeGasUsed")) {
                delete receipt.cumulativeGasUsed;
            }
            receipt.gasUsed = web3Utils.hexToNumber(receipt.gasUsed);
            if (receipt.gasPayer) {
                receipt.gasPayer = web3Utils.toChecksumAddress(receipt.gasPayer);
            }
            if (receipt.meta && receipt.meta.txOrigin) {
                receipt.meta.txOrigin = web3Utils.toChecksumAddress(receipt.meta.txOrigin);
            }
            for (const output of receipt.outputs) {
                if (web3Utils._.isArray(output.events)) {
                    output.events = output.events.map((event) => {
                        if (!event.isThorified) {
                            Object.defineProperty(event, "isThorified", { get: () => true });
                        }
                        return web3.extend.formatters.outputLogFormatter(event);
                    });
                }
                if (output.contractAddress) {
                    output.contractAddress = web3Utils.toChecksumAddress(output.contractAddress);
                }
            }
            return receipt;
        }
        else {
            return outputTransactionReceiptFormatter(receipt);
        }
    };
    const outputLogFormatter = web3.extend.formatters.outputLogFormatter;
    web3.extend.formatters.outputLogFormatter = function (log) {
        if (log && log.isThorified) {
            debug("outputLogFormatter");
            if (log.hasOwnProperty("transactionIndex")) {
                delete log.transactionIndex;
            }
            if (log.hasOwnProperty("logIndex")) {
                delete log.logIndex;
            }
            if (log.hasOwnProperty("id")) {
                delete log.id;
            }
            if (log.address) {
                log.address = web3Utils.toChecksumAddress(log.address);
            }
            return log;
        }
        else {
            return outputLogFormatter(log);
        }
    };
};
exports.extendFormatters = extendFormatters;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0dGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHRlbmQvZm9ybWF0dGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBQ2IsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ2hELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUV4QyxvQ0FBb0M7QUFFcEMsTUFBTSxnQkFBZ0IsR0FBRyxVQUFTLElBQVM7SUFFekMsTUFBTSwwQkFBMEIsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQywwQkFBMEIsQ0FBQztJQUNyRixJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQywwQkFBMEIsR0FBRyxVQUFTLEVBQU87UUFDbEUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRTtZQUN4QixLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztZQUNwQyxFQUFFLENBQUMsR0FBRyxHQUFHLFNBQVMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZDLEVBQUUsQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFakQsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFO2dCQUNiLEVBQUUsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNwRDtZQUNELElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRTtnQkFDZCxLQUFLLE1BQU0sTUFBTSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUU7b0JBQy9CLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUM3RSxJQUFJLE1BQU0sQ0FBQyxFQUFFLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSx5REFBeUQ7d0JBQzFHLE1BQU0sQ0FBQyxFQUFFLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztxQkFDcEQ7eUJBQU07d0JBQ0wsTUFBTSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxtQ0FBbUM7cUJBQ3REO2lCQUNGO2FBQ0Y7WUFDRCxPQUFPLEVBQUUsQ0FBQztTQUNYO2FBQU07WUFDTCxPQUFPLDBCQUEwQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsTUFBTSxpQ0FBaUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsQ0FBQztJQUNuRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsR0FBRyxVQUFTLE9BQVk7UUFDOUUsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUNsQyxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztZQUUzQyxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsRUFBRTtnQkFDOUMsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7YUFDakM7WUFDRCxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsbUJBQW1CLENBQUMsRUFBRTtnQkFDL0MsT0FBTyxPQUFPLENBQUMsaUJBQWlCLENBQUM7YUFDbEM7WUFFRCxPQUFPLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRXpELElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtnQkFDcEIsT0FBTyxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ2xFO1lBQ0QsSUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUN6QyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUM1RTtZQUVELEtBQUssTUFBTSxNQUFNLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRTtnQkFDcEMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7b0JBQ3RDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFVLEVBQUUsRUFBRTt3QkFDL0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUU7NEJBQ3RCLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO3lCQUNqRTt3QkFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUMxRCxDQUFDLENBQUMsQ0FBQztpQkFDSjtnQkFFRCxJQUFJLE1BQU0sQ0FBQyxlQUFlLEVBQUU7b0JBQzFCLE1BQU0sQ0FBQyxlQUFlLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztpQkFDOUU7YUFDRjtZQUVELE9BQU8sT0FBTyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxPQUFPLGlDQUFpQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25EO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQztJQUNyRSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsR0FBRyxVQUFTLEdBQVE7UUFDM0QsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUMxQixLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUM1QixJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsRUFBRTtnQkFDMUMsT0FBTyxHQUFHLENBQUMsZ0JBQWdCLENBQUM7YUFDN0I7WUFDRCxJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBQ2xDLE9BQU8sR0FBRyxDQUFDLFFBQVEsQ0FBQzthQUNyQjtZQUNELElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDNUIsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDO2FBQ2Y7WUFFRCxJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUU7Z0JBQ2YsR0FBRyxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ3hEO1lBRUQsT0FBTyxHQUFHLENBQUM7U0FDWjthQUFNO1lBQ0wsT0FBTyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUdBLDRDQUFnQiJ9